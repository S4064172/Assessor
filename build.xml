<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="selenium">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../eclipse/java-2020-12/eclipse/"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="15"/>
    <property name="source" value="15"/>
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../.m2/repository/com/github/javaparser/javaparser-symbol-solver-core/3.22.1/javaparser-symbol-solver-core-3.22.1.jar"/>
        <pathelement location="../../.m2/repository/com/github/javaparser/javaparser-core/3.22.1/javaparser-core-3.22.1.jar"/>
        <pathelement location="../../.m2/repository/org/javassist/javassist/3.28.0-GA/javassist-3.28.0-GA.jar"/>
        <pathelement location="../../.m2/repository/com/google/guava/guava/30.1.1-jre/guava-30.1.1-jre.jar"/>
        <pathelement location="../../.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar"/>
        <pathelement location="../../.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar"/>
        <pathelement location="../../.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar"/>
        <pathelement location="../../.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar"/>
        <pathelement location="../../.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar"/>
        <pathelement location="../../.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar"/>
    </path>
    <path id="selenium.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.Main (1).classpath">
        <path refid="selenium.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/resources">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/resources">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <src path="src/main/resources"/>
            <exclude name="**"/>
            <classpath refid="selenium.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <src path="src/test/resources"/>
            <exclude name="**"/>
            <classpath refid="selenium.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="Main (1)">
        <java classname="selenium.SeleniumConvertTool" failonerror="true" fork="yes">
            <classpath refid="run.SeleniumConvertTool.classpath"/>
        </java>
    </target>
</project>
